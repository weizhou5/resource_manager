# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from rms.swagger_server.models.base_model_ import Model
from rms.swagger_server import util


class PvcStatus(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, namespace: str=None, name: str=None, message: str=None, status: bool=None):  # noqa: E501
        """PvcStatus - a model defined in Swagger

        :param namespace: The namespace of this PvcStatus.  # noqa: E501
        :type namespace: str
        :param name: The name of this PvcStatus.  # noqa: E501
        :type name: str
        :param message: The message of this PvcStatus.  # noqa: E501
        :type message: str
        :param status: The status of this PvcStatus.  # noqa: E501
        :type status: bool
        """
        self.swagger_types = {
            'namespace': str,
            'name': str,
            'message': str,
            'status': bool
        }

        self.attribute_map = {
            'namespace': 'namespace',
            'name': 'name',
            'message': 'message',
            'status': 'status'
        }

        self._namespace = namespace
        self._name = name
        self._message = message
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'PvcStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The pvcStatus of this PvcStatus.  # noqa: E501
        :rtype: PvcStatus
        """
        return util.deserialize_model(dikt, cls)

    @property
    def namespace(self) -> str:
        """Gets the namespace of this PvcStatus.


        :return: The namespace of this PvcStatus.
        :rtype: str
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace: str):
        """Sets the namespace of this PvcStatus.


        :param namespace: The namespace of this PvcStatus.
        :type namespace: str
        """

        self._namespace = namespace

    @property
    def name(self) -> str:
        """Gets the name of this PvcStatus.


        :return: The name of this PvcStatus.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this PvcStatus.


        :param name: The name of this PvcStatus.
        :type name: str
        """

        self._name = name

    @property
    def message(self) -> str:
        """Gets the message of this PvcStatus.


        :return: The message of this PvcStatus.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this PvcStatus.


        :param message: The message of this PvcStatus.
        :type message: str
        """

        self._message = message

    @property
    def status(self) -> bool:
        """Gets the status of this PvcStatus.

        True:success, False: failed  # noqa: E501

        :return: The status of this PvcStatus.
        :rtype: bool
        """
        return self._status

    @status.setter
    def status(self, status: bool):
        """Sets the status of this PvcStatus.

        True:success, False: failed  # noqa: E501

        :param status: The status of this PvcStatus.
        :type status: bool
        """

        self._status = status
